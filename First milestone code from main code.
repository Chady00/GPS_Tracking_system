#include "tm4c123gh6pm.h"
#include <stdio.h>
#include "stdint.h"
#include <math.h>

#ifndef M_PI
#define M_PI 3.141592
#endif
#define DELAY_VALUE 100000
#define DELAY_VALUE_1 10000

unsigned long j=0;
    // Delay function
void Delay(void){
    for (j=0; j<DELAY_VALUE ; j++);
}
void Delay_1(void){
    for (j=0; j<DELAY_VALUE_1 ; j++);
}

void LCD_DATA(char data)
{
    GPIO_PORTA_DATA_R=0x20;
    GPIO_PORTB_DATA_R=data;
    GPIO_PORTA_DATA_R|=0x80;
    Delay_1();
    GPIO_PORTA_DATA_R=0;

}
//LCD COMMAND
void LCD_command(char command)
{
    GPIO_PORTA_DATA_R=0;
    GPIO_PORTB_DATA_R=command;
    GPIO_PORTA_DATA_R|=0x80;
    Delay_1();

    GPIO_PORTA_DATA_R=0;

}


// An indicator function which switch is on or off.
unsigned char SW1_SW2_input(void){
	return GPIO_PORTF_DATA_R & 0x11;
	}

// function to get the LED on.
void RG_out(unsigned char data){
    GPIO_PORTF_DATA_R &=~ 0x0E;
    GPIO_PORTF_DATA_R|=data;


// intialization for LEDs.
void init_LEDs(void){
	//SYSCTL_RCGCGPIO_R |=0x20;
	//while((SYSCTL_PRGPIO_R & 0x20)==0);
	GPIO_PORTF_LOCK_R = 0x4C4F434B ;
	GPIO_PORTF_CR_R |= 0x0E;
	GPIO_PORTF_AMSEL_R &= ~ 0x0E;
	GPIO_PORTF_PCTL_R &= ~0x0000FFF0;
	GPIO_PORTF_AFSEL_R &=~ 0x0E;
	GPIO_PORTF_DIR_R |= 0x0E;
	GPIO_PORTF_DEN_R|= 0x0E;
	GPIO_PORTF_PUR_R |= 0x0E;
	GPIO_PORTF_DATA_R &= ~0x0E;
}
// initialization for switches.
void init_SW1_SW2( void){
    //initializing PORT F 
    SYSCTL_RCGCGPIO_R |=0x20;
    while((SYSCTL_PRGPIO_R & 0x20)==0)
    GPIO_PORTF_LOCK_R = 0x4C4F434B ;
    GPIO_PORTF_CR_R |= 0x0E;
    GPIO_PORTF_AMSEL_R &= ~ 0x11;
    GPIO_PORTF_PCTL_R &= ~0x000F0000;
    GPIO_PORTF_AFSEL_R &=~0x11;
    GPIO_PORTF_DIR_R &= ~0x11;
    GPIO_PORTF_DEN_R|=0x11;
    GPIO_PORTF_PUR_R |= 0x11;}
  
  //Port A initialization
   void Port_A_init(void){
SYSCTL_RCGCGPIO_R |= (0x01) ;
while((SYSCTL_PRGPIO_R & 0x01)==0)
GPIO_PORTA_AMSEL_R &= ~ 0x04;
GPIO_PORTA_PCTL_R &= ~0x00000F00;
GPIO_PORTA_AFSEL_R &=~0x04;
GPIO_PORTA_DIR_R |= 0x04 ;
GPIO_PORTA_DEN_R |= 0x04 ;
}  
  int main ( void )
{
while(1){
init();
init_SW1_SW2();
init_LEDs();
Port_A_init();

// Getting the distance from GPS module then parsing it into the 7-segement.
double distance = getdistance(30.08936865510356, 31.317882086193052,30.08936020962868, 31.317865879823166);
total_distance+=(distance);

LCD_command(1);
LCD_command(0x80);
LCD_DATA('d');
LCD_DATA('i');
LCD_DATA('s');
LCD_DATA('t');
LCD_DATA('a');
LCD_DATA('n');
LCD_DATA('c');
LCD_DATA('e');
LCD_DATA('=');
LCD_DATA(text[0]);
LCD_DATA(text[1]);
LCD_DATA(text[2]);
LCD_DATA(text[3]);

// It will 20 times on seven segment as an assumed distance from virtual GPS module just for first milestone.

	for (i=0;i<(distance);i++){
  GPIO_PORTA_DATA_R |= 0x04;
	Delay();
	GPIO_PORTA_DATA_R &= ~0x04;
			}
//if it reached 100 meters the LED will be blue.
  
		if (total_distance >=100 ){
	LED_out= 0x04;	
	RG_out(LED_out);
	while(1){
	}
	}
}}
