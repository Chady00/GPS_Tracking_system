#include "tm4c123gh6pm.h"
#include "stdint.h"
#include <math.h>

#ifndef M_PI
#define M_PI 3.141592
#endif
#define DELAY_VALUE 1000000
// intialization for LEDs.
void init_LEDs(void){
	//SYSCTL_RCGCGPIO_R |=0x20;
	//while((SYSCTL_PRGPIO_R & 0x20)==0);
	GPIO_PORTF_LOCK_R = 0x4C4F434B ;
	GPIO_PORTF_CR_R |= 0x0E;
	GPIO_PORTF_AMSEL_R &= ~ 0x0E;
	GPIO_PORTF_PCTL_R &= ~0x0000FFF0;
	GPIO_PORTF_AFSEL_R &=~ 0x0E;
	GPIO_PORTF_DIR_R |= 0x0E;
	GPIO_PORTF_DEN_R|= 0x0E;
	GPIO_PORTF_PUR_R |= 0x0E;
	GPIO_PORTF_DATA_R &= ~0x0E;
}
unsigned long j=0;
    // Delay function
void Delay(void){
    for (j=0; j<DELAY_VALUE ; j++);
}
// An indicator function which switch is on or off.
unsigned char SW1_SW2_input(void){
    return GPIO_PORTF_DATA_R & 0x11;
    }

// initialization for switches.
void init_SW1_SW2( void){
    //initializing PORT F 
    SYSCTL_RCGCGPIO_R |=0x20;
    while((SYSCTL_PRGPIO_R & 0x20)==0)
    GPIO_PORTF_LOCK_R = 0x4C4F434B ;
    GPIO_PORTF_CR_R |= 0x0E;    
    GPIO_PORTF_AMSEL_R &= ~ 0x11;
    GPIO_PORTF_PCTL_R &= ~0x000F0000;
    GPIO_PORTF_AFSEL_R &=~0x11;
    GPIO_PORTF_DIR_R &= ~0x11;
    GPIO_PORTF_DEN_R|=0x11;
    GPIO_PORTF_PUR_R |= 0x11;}
     // Port B initization.
void Port_B_init(void){
SYSCTL_RCGCGPIO_R |= (1<<1) ;
while((SYSCTL_PRGPIO_R & 0x02)==0)
GPIO_PORTF_AMSEL_R &= ~ 0x01;
GPIO_PORTF_PCTL_R &= ~0x0000000F;
GPIO_PORTF_AFSEL_R &=~0x01;
GPIO_PORTB_DIR_R |= 0x01 ;
GPIO_PORTB_DEN_R |= 0x01 ;
}

unsigned char btn;
unsigned char LED_out;
int i=0;
double lat_1;
double lat_2;
double long_1;
double long_2;
double distance;
double total_distance;
int main ( void )
{
init_SW1_SW2();
init_LEDs();
Port_B_init();
// Loop forever . 

while(1){
	//check whether the switch 2 is on or off, the indicator for final distination.
	btn= SW1_SW2_input();
	if (btn == 0x10){
	LED_out= 0x04;	
	RG_out(LED_out);
	
	
	}
// Getting the distance from GPS module then parsing it into the 7-segement.
//  distance = getdistance(lat_1,long_1,lat_2,long_2) ;
//    total_distance+=distance;


// getdistance(30.08936865510356, 31.317882086193052,30.08828020962868, 31.316465879823166);


// ### random intialization function for the array coordinates (which we should collect from the GPS module  ###

// double coordinates[10][2] ;
// coordinates[0][0] = 30.08936865510356 ; 
// coordinates[0][1] = 31.317882086193052 ; 
// for(int i= 0; i < 10 ; i++){
//     coordinates[i+1][0] = coordinates[i][0] +1 ;
//     coordinates[i+1][1] = coordinates[i][1] +1 ;
// }
	
for (i=0;i<=20;i++){
GPIO_PORTB_DATA_R |= 0x01;
Delay();
GPIO_PORTB_DATA_R &= ~0x01;
}
}
}
void UART1_Init(void){
  SYSCTL_RCGC1_R |= SYSCTL_RCGC1_UART1; 
  SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB; 
  UART1_CTL_R &= ~UART_CTL_UARTEN; 
  //CLOOCK SPEED = 30MHZ
  UART1_IBRD_R = 195;                    
  UART1_FBRD_R = 21;                    
  UART1_LCRH_R = (UART_LCRH_WLEN_8|UART_LCRH_FEN);
  UART1_CTL_R |= UART_CTL_UARTEN;
  GPIO_PORTB_AFSEL_R |= 0x03;
  GPIO_PORTB_DEN_R |= 0x03;             
  GPIO_PORTB_AMSEL_R &= ~0x03;            
  GPIO_PORTB_PCTL_R = (GPIO_PORTB_PCTL_R&0xFFFFFF00)|(GPIO_PCTL_PB1_U1TX|GPIO_PCTL_PB0_U1RX);
}
